{
  "_args": [
    [
      {
        "raw": "output-file-sync@^2.0.0",
        "scope": null,
        "escapedName": "output-file-sync",
        "name": "output-file-sync",
        "rawSpec": "^2.0.0",
        "spec": ">=2.0.0 <3.0.0",
        "type": "range"
      },
      "/Users/keita/Desktop/line-share-btn/node_modules/@babel/cli"
    ]
  ],
  "_from": "output-file-sync@>=2.0.0 <3.0.0",
  "_id": "output-file-sync@2.0.1",
  "_inCache": true,
  "_location": "/@babel/cli/output-file-sync",
  "_nodeVersion": "9.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/output-file-sync_2.0.1_1518692186239_0.08003246146288934"
  },
  "_npmUser": {
    "name": "shinnn",
    "email": "snnskwtnb@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "output-file-sync@^2.0.0",
    "scope": null,
    "escapedName": "output-file-sync",
    "name": "output-file-sync",
    "rawSpec": "^2.0.0",
    "spec": ">=2.0.0 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@babel/cli"
  ],
  "_resolved": "https://registry.npmjs.org/output-file-sync/-/output-file-sync-2.0.1.tgz",
  "_shasum": "f53118282f5f553c2799541792b723a4c71430c0",
  "_shrinkwrap": null,
  "_spec": "output-file-sync@^2.0.0",
  "_where": "/Users/keita/Desktop/line-share-btn/node_modules/@babel/cli",
  "author": {
    "name": "Shinnosuke Watanabe",
    "url": "https://github.com/shinnn"
  },
  "bugs": {
    "url": "https://github.com/shinnn/output-file-sync/issues"
  },
  "dependencies": {
    "graceful-fs": "^4.1.11",
    "is-plain-obj": "^1.1.0",
    "mkdirp": "^0.5.1"
  },
  "description": "Synchronously write a file and create its ancestor directories if needed",
  "devDependencies": {
    "@shinnn/eslint-config-node": "^5.0.0",
    "eslint": "^4.17.0",
    "get-mode": "^1.0.1",
    "nyc": "^11.4.1",
    "read-utf8-file": "^2.0.0",
    "rmfr": "^2.0.0-3",
    "tape": "^4.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-mDho4qm7WgIXIGf4eYU1RHN2UU5tPfVYVSRwDJw0uTmj35DQUt/eNp19N7v6T3SrR0ESTEf2up2CGO73qI35zQ==",
    "shasum": "f53118282f5f553c2799541792b723a4c71430c0",
    "tarball": "https://registry.npmjs.org/output-file-sync/-/output-file-sync-2.0.1.tgz",
    "fileCount": 4,
    "unpackedSize": 9398
  },
  "eslintConfig": {
    "extends": "@shinnn/node"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "d21115faae4b86d85d876fda56f7bd57c0bc1a4e",
  "homepage": "https://github.com/shinnn/output-file-sync#readme",
  "keywords": [
    "fs",
    "write",
    "sync",
    "synchronous",
    "output",
    "create",
    "file",
    "mkdir",
    "mkdirp"
  ],
  "license": "ISC",
  "maintainers": [
    {
      "name": "shinnn",
      "email": "snnskwtnb@gmail.com"
    }
  ],
  "name": "output-file-sync",
  "optionalDependencies": {},
  "readme": "# output-file-sync\n\n[![npm version](https://img.shields.io/npm/v/output-file-sync.svg)](https://www.npmjs.com/package/output-file-sync)\n[![Build Status](https://travis-ci.org/shinnn/output-file-sync.svg?branch=master)](https://travis-ci.org/shinnn/output-file-sync)\n[![Build status](https://ci.appveyor.com/api/projects/status/3qjn5ktuqb6w2cae?svg=true)](https://ci.appveyor.com/project/ShinnosukeWatanabe/output-file-sync)\n[![Coverage Status](https://coveralls.io/repos/github/shinnn/output-file-sync/badge.svg?branch=master)](https://coveralls.io/github/shinnn/output-file-sync?branch=master)\n\nSynchronously write a file and create its ancestor directories if needed\n\n```javascript\nconst {readFileSync} = require('fs');\nconst outputFileSync = require('output-file-sync');\n\noutputFileSync('foo/bar/baz.txt', 'Hi!');\nreadFileSync('foo/bar/baz.txt', 'utf8'); //=> 'Hi!'\n```\n\n## Difference from [fs.outputFileSync](https://github.com/jprichardson/node-fs-extra/blob/master/docs/outputFile.md)\n\nThis module is very similar to [fs-extra](https://github.com/jprichardson/node-fs-extra)'s `fs.outputFileSync` method, but different in the following points:\n\n1. *output-file-sync* returns the path of the directory created first. [See the API document for more details.](#outputfilesyncpath-data--options)\n2. *output-file-sync* accepts [mkdirp] options.\n   ```javascript\n   const {statSync} = require('fs');\n   const outputFileSync = require('output-file-sync');\n\n   outputFileSync('foo/bar', 'content', {mode: 33260});\n   statSync('foo').mode; //=> 33260\n   ```\n3. *output-file-sync* validates its arguments strictly, and prints highly informative error message.\n\n## Installation\n\n[Use](https://docs.npmjs.com/cli/install) [npm](https://docs.npmjs.com/getting-started/what-is-npm).\n\n```\nnpm install output-file-sync\n```\n\n## API\n\n```javascript\nconst outputFileSync = require('output-file-sync');\n```\n\n### outputFileSync(*path*, *data* [, *options*])\n\n*path*: `string`  \n*data*: `string`, `Buffer` or `Uint8Array`  \n*options*: `Object` (options for [fs.writeFileSync] and [mkdirp]) or `string` (encoding)  \nReturn: `string` if it creates more than one directories, otherwise `null`\n\nIt writes the data to a file synchronously. If ancestor directories of the file don't exist, it creates the directories before writing the file.\n\n```javascript\nconst {statSync} = require('fs');\nconst outputFileSync = require('output-file-sync');\n\n// When the directory `foo/bar` exists\noutputFileSync('foo/bar/baz/qux.txt', 'Hello', 'utf-8');\n\nstatSync('foo/bar/baz').isDirectory(); //=> true\nstatSync('foo/bar/baz/qux.txt').isFile(); //=> true\n```\n\nIt returns the directory path just like [mkdirp.sync](https://github.com/substack/node-mkdirp#mkdirpsyncdir-opts):\n\n> Returns the first directory that had to be created, if any.\n\n```javascript\nconst dir = outputFileSync('foo/bar/baz.txt', 'Hello');\ndir === path.resolve('foo'); //=> true\n```\n\n#### options\n\nAll options for [fs.writeFileSync] and [mkdirp] are available.\n\nAdditionally, you can pass [`fileMode`](#optionsfilemode) and [`dirMode`](#optionsdirmode) options to set different permission between the file and directories.\n\n##### options.fileMode\n\nSet the mode of a file, overriding `mode` option.\n\n##### options.dirMode\n\nSet the modes of directories, overriding `mode` option.\n\n```javascript\noutputFileSync('dir/file', 'content', {dirMode: '0745', fileMode: '0644'});\nfs.statSync('dir').mode.toString(8); //=> '40745'\nfs.statSync('dir/file').mode.toString(8); //=> '100644'\n```\n\n## Related project\n\n* [output-file](https://github.com/shinnn/output-file) (asynchronous version)\n\n## License\n\n[ISC License](./LICENSE) Â© 2017 - 2018 Shinnosuke Watanabe\n\n[fs.writeFileSync]: https://nodejs.org/api/fs.html#fs_fs_writefilesync_file_data_options\n[mkdirp]: https://github.com/substack/node-mkdirp\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shinnn/output-file-sync.git"
  },
  "scripts": {
    "pretest": "eslint --fix --format=codeframe index.js test.js",
    "test": "nyc --reporter=html --reporter=text node test.js"
  },
  "version": "2.0.1"
}
